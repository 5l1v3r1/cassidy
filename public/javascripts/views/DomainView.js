// Generated by CoffeeScript 1.3.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  window.DomainView = (function(_super) {

    __extends(DomainView, _super);

    function DomainView() {
      return DomainView.__super__.constructor.apply(this, arguments);
    }

    DomainView.prototype.el = $('#recent_domains ul');

    DomainView.prototype.events = {
      'click .remove': 'clear',
      'click .domain': 'load'
    };

    DomainView.prototype.initialize = function() {
      var self;
      self = this;
      _.bindAll(this, 'clear');
      App.Domains.bind('all', this.render, this);
      return App.Domains.fetch();
    };

    DomainView.prototype.render = function() {
      var domains, self;
      self = this;
      domains = App.Domains.toJSON();
      if (domains.length) {
        self.el.empty();
      }
      return _.each(domains, function(d) {
        return self.el.append("<li data-id='" + d.id + "'>           <a href='#" + d.url + "' class='domain'>            " + d.url + "          </a>           <a href='#remove' class='remove'>&times;</a>        </li>");
      });
    };

    DomainView.prototype.clear = function(e) {
      var id, item;
      e.preventDefault();
      id = $(e.currentTarget).parent().data('id');
      item = App.Domains.get(id);
      return item.destroy();
    };

    DomainView.prototype.load = function(e) {
      e.preventDefault();
      App.AppView.render($(e.currentTarget).parent().data('id'));
      return Swipe.next();
    };

    return DomainView;

  })(Backbone.View);

}).call(this);
